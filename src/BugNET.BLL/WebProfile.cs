//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Configuration;

namespace BugNET.BLL
{
    public class WebProfile
    {
        private readonly System.Web.Profile.ProfileBase _profileBase;
        
        public WebProfile() {
            _profileBase = new System.Web.Profile.ProfileBase();
        }
        
        public WebProfile(System.Web.Profile.ProfileBase profileBase) {
            _profileBase = profileBase;
        }

        public virtual string SelectedIssueColumns
        {
            get
            {
                return ((string)(GetPropertyValue("SelectedIssueColumns")));
            }
            set
            {
                SetPropertyValue("SelectedIssueColumns", value);
            }
        }

        public virtual string NotificationTypes
        {
            get
            {
                return ((string)(GetPropertyValue("NotificationTypes")));
            }
            set
            {
                SetPropertyValue("NotificationTypes", value);
            }
        }

        public virtual string PreferredLocale
        {
            get
            {
                return ((string)(GetPropertyValue("PreferredLocale")));
            }
            set
            {
                SetPropertyValue("PreferredLocale", value);
            }
        }
        
        public virtual string LastName {
            get {
                return ((string)(GetPropertyValue("LastName")));
            }
            set {
                SetPropertyValue("LastName", value);
            }
        }
        
        public virtual string FirstName {
            get {
                return ((string)(GetPropertyValue("FirstName")));
            }
            set {
                SetPropertyValue("FirstName", value);
            }
        }
             
        public virtual int IssuesPageSize {
            get {
                return ((int)(GetPropertyValue("IssuesPageSize")));
            }
            set {
                SetPropertyValue("IssuesPageSize", value);
            }
        }
             
        public virtual string DisplayName {
            get {
                return ((string)(GetPropertyValue("DisplayName")));
            }
            set {
                SetPropertyValue("DisplayName", value);
            }
        }
        
        public static WebProfile Current {
            get {
                return new WebProfile(System.Web.HttpContext.Current.Profile);
            }
        }
        
        public virtual System.Web.Profile.ProfileBase ProfileBase {
            get {
                return _profileBase;
            }
        }
        
        public virtual object this[string propertyName] {
            get {
                return _profileBase[propertyName];
            }
            set {
                _profileBase[propertyName] = value;
            }
        }
        
        public virtual string UserName {
            get {
                return _profileBase.UserName;
            }
        }
        
        public virtual bool IsAnonymous {
            get {
                return _profileBase.IsAnonymous;
            }
        }
        
        public virtual bool IsDirty {
            get {
                return _profileBase.IsDirty;
            }
        }
        
        public virtual System.DateTime LastActivityDate {
            get {
                return _profileBase.LastActivityDate;
            }
        }
        
        public virtual System.DateTime LastUpdatedDate {
            get {
                return _profileBase.LastUpdatedDate;
            }
        }
        
        public virtual SettingsProviderCollection Providers {
            get {
                return _profileBase.Providers;
            }
        }
        
        public virtual SettingsPropertyValueCollection PropertyValues {
            get {
                return _profileBase.PropertyValues;
            }
        }
        
        public virtual SettingsContext Context {
            get {
                return _profileBase.Context;
            }
        }
        
        public virtual bool IsSynchronized {
            get {
                return _profileBase.IsSynchronized;
            }
        }
        
        public static SettingsPropertyCollection Properties {
            get {
                return System.Web.Profile.ProfileBase.Properties;
            }
        }
        
        public virtual WebProfile GetProfile(string username) {
            return new WebProfile(System.Web.Profile.ProfileBase.Create(username));
        }
        
        public virtual object GetPropertyValue(string propertyName) {
            return _profileBase.GetPropertyValue(propertyName);
        }
        
        public virtual void SetPropertyValue(string propertyName, object propertyValue) {
            _profileBase.SetPropertyValue(propertyName, propertyValue);
        }
        
        public virtual System.Web.Profile.ProfileGroupBase GetProfileGroup(string groupName) {
            return _profileBase.GetProfileGroup(groupName);
        }
        
        public virtual void Initialize(string username, bool isAuthenticated) {
            _profileBase.Initialize(username, isAuthenticated);
        }
        
        public virtual void Save() {
            _profileBase.Save();
        }
        
        public virtual void Initialize(SettingsContext context, SettingsPropertyCollection properties, SettingsProviderCollection providers) {
            _profileBase.Initialize(context, properties, providers);
        }
        
        public static SettingsBase Synchronized(SettingsBase settingsBase) {
            return SettingsBase.Synchronized(settingsBase);
        }
        
        public static System.Web.Profile.ProfileBase Create(string userName) {
            return System.Web.Profile.ProfileBase.Create(userName);
        }
        
        public static System.Web.Profile.ProfileBase Create(string userName, bool isAuthenticated) {
            return System.Web.Profile.ProfileBase.Create(userName, isAuthenticated);
        }
    }
}
